{
    "id": "/datadog-agent",
    "cmd": null,
    "cpus": 0.5,
    "mem": 256,
    "disk": 0,
    "instances": 1,
    "constraints": [
        [
            "hostname",
            "UNIQUE"
        ],
        [
            "hostname",
            "GROUP_BY"
        ]
    ],
    "acceptedResourceRoles": [
        "slave_public",
        "*"
    ],
    "container": {
        "type": "DOCKER",
        "volumes": [
            {
                "containerPath": "/var/run/docker.sock",
                "hostPath": "/var/run/docker.sock",
                "mode": "RO"
            },
            {
                "containerPath": "/host/proc",
                "hostPath": "/proc",
                "mode": "RO"
            },
            {
                "containerPath": "/host/sys/fs/cgroup",
                "hostPath": "/sys/fs/cgroup",
                "mode": "RO"
            },
            {
                "containerPath": "/conf.d/mesos_slave.d",
                "hostPath": "/opt/datadog-agent/conf.d/mesos_slave.d",
                "mode": "RO"
            },
            {
                "containerPath": "/etc/cont-init.d/90-mesos.sh",
                "hostPath": "/opt/datadog-agent/cont-init.d/90-mesos.sh",
                "mode": "RO"
            }
        ],
        "docker": {
            "image": "datadog/agent-dev:dcos-auth-token-py3",
            "network": "BRIDGE",
            "portMappings": [
                {
                    "containerPort": 8125,
                    "hostPort": 8125,
                    "servicePort": 10000,
                    "protocol": "udp",
                    "labels": {}
                }
            ],
            "privileged": false,
            "parameters": [
                {
                    "key": "env",
                    "value": "DD_API_KEY=<YOUR_DD_API_KEY>"
                },
                {
                    "key": "env",
                    "value": "MESOS_SLAVE=true"
                }
            ],
            "forcePullImage": true
        }
    },
    "healthChecks": [
        {
            "protocol": "COMMAND",
            "command": {
                "value": "/probe.sh"
            },
            "gracePeriodSeconds": 300,
            "intervalSeconds": 60,
            "timeoutSeconds": 20,
            "maxConsecutiveFailures": 3
        }
    ],
    "portDefinitions": [
        {
            "port": 10000,
            "protocol": "tcp",
            "name": "default",
            "labels": {}
        },
        {
            "port": 10001,
            "protocol": "tcp",
            "labels": {}
        }
    ]
}